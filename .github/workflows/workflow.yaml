name: Test

on:
  # code pushed to pull request branch
  push:
    branches-ignore:
      - main
  # when draft state is removed (needed as automatically created PRs are not triggering this action)
  pull_request:
    types: [ready_for_review]

env:
  GITHUB_WORKFLOW: true
  COVERAGE_PYTHON_VERSION: 3.12
  COVERAGE_DJANGO_VERSION: 5.2
  COVERAGE_DATABASE: postgres

jobs:
  # lint code for errors
  # see https://github.com/RegioHelden/github-reusable-workflows/blob/main/.github/workflows/python-ruff.yaml
  lint:
    name: Lint
    permissions:
      contents: read
    uses: RegioHelden/github-reusable-workflows/.github/workflows/python-ruff.yaml@v2.2.3
    with:
      ruff-version: "0.11.5"
      python-version: "3.12"

  test:
    name: Test and coverage
    needs:
      - lint
    runs-on: ubuntu-24.04

    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
        django:
          - "4.2"
          - "5.0"
          - "5.1"
          - "5.2"
        database:
          - sqlite
          - mysql
          - postgres
        exclude:
          - django: "4.2"
            python-version: "3.13"
          - django: "5.0"
            python-version: "3.9"
          - django: "5.0"
            python-version: "3.13"
          - django: "5.1"
            python-version: "3.9"
          - django: "5.2"
            python-version: "3.9"

    services:
      # postgres service
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      # mysql service
      mysql:
        image: mysql:9
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5

      - name: Install requirements
        run: uv pip install --system -r requirements-ci.txt

      - name: Install Django ${{ matrix.django }}
        run: uv pip install --system "Django~=${{ matrix.django }}"
      - name: Install MySQL libs
        if: matrix.database == 'mysql'
        run: uv pip install --system mysqlclient>=2.2.7 django-mysql>=4.16.0
      - name: Install postgres libs
        if: matrix.database == 'postgres'
        run: uv pip install --system psycopg>=3.2.6

      - name: Install package
        run: uv pip install --system -e .

      - name: Run tests
        run: python manage.py test
        env:
          DATABASE_ENGINE: ${{ matrix.database }}

      - name: Coverage
        if: |
          matrix.python-version == env.COVERAGE_PYTHON_VERSION
          &&
          matrix.django == env.COVERAGE_DJANGO_VERSION
          &&
          matrix.database == env.COVERAGE_DATABASE
          &&
          github.repository == 'RegioHelden/django-scrubber'
          &&
          (
            github.event_name == 'push'
            ||
            (
              github.event_name == 'pull_request'
              &&
              github.head_ref == 'master'
            )
          )
        run: uv pip install --system coverage coveralls && coverage run --source=django_scrubber manage.py test && coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          DATABASE_ENGINE: ${{ matrix.database }}
